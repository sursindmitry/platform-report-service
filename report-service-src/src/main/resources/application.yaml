server:
  port: 9292

spring:
  application:
    name: report-service

  kafka:
    bootstrap-servers: ${SERVER_HOST_KAFKA:localhost}:${SERVER_PORT_KAFKA:9092}
    consumer:
      group-id: report-group
      auto-offset-reset: earliest
      auto-commit-interval: 100ms
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topic:
      user-events: user-events

  cache:
    type: redis
  data:
    mongodb:
      database: platform_files
      uri: mongodb://${SERVER_MONGO_USERNAME:root}:${SERVER_MONGO_PASSWORD:root}@${SERVER_HOST_MONGO:localhost}:${SERVER_PORT_MONGO:27017}
    redis:
      host: ${SERVER_HOST_REDIS:localhost}
      port: ${SERVER_PORT_REDIS:6379}

  datasource:
    url: jdbc:postgresql://${SERVER_POSTGRES_HOST:localhost}:${SERVER_POSTGRES_PORT:5432}/${SERVER_POSTGRES_DB:postgres}
    username: ${SERVER_POSTGRES_USERNAME:postgres}
    password: ${SERVER_POSTGRES_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql

  liquibase:
    change-log: db/changelog/db.changelog.yaml
    enabled: true

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
  otlp:
    metrics:
      export:
        url: http://localhost:4318/v1/metrics
        step: 10s

logging:
  level:
    root: info

springdoc:
  show-actuator: false